type UserId = text;
type Result_1 = 
 variant {
   err: text;
   ok: text;
 };
type Result = 
 variant {
   err: text;
   ok: BetId;
 };
type BetId = text;
type Bet = 
 record {
   counterparty: opt UserId;
   createdAt: int;
   creator: UserId;
   description: text;
   id: BetId;
   outcome: opt text;
   smartContractAddress: opt text;
   status: text;
 };
service : {
  acceptBet: (BetId) -> (Result_1);
  getAllBets: () -> (vec Bet) query;
  getBet: (BetId) -> (opt Bet) query;
  proposeBet: (text) -> (Result);
}
